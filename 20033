#include <iostream>
#include <algorithm>
#include <vector>
#include <stack>
using namespace std;
/*
매개변수 탐색을 통해 가능한 최대 길이를 찾아주는 것! w/ stack
*/

bool check(vector <int> v, int len) {
	int cur = 0;
	stack <int> st;

	for (int i = 0; i < v.size(); i++) {
		if (v[i] < len) {
			while (!st.empty()) st.pop();
			cur = 0;
			continue;
		}
		st.push(v[i]);
		cur++;

		if (cur == len) return true;
	}
	return false;
}
int main() {
	int n;
	int ans;
	vector <int> v;
	vector <int> vec;

	cin >> n;

	for (int i = 0; i < n; i++) {
		int a;
		cin >> a;
		v.push_back(a);
		vec.push_back(a);
	}

	sort(v.begin(), v.end());

	int s = 1;
	int e = v[v.size() - 1] + 1; //1부터 나올수 있는 최대길이 + 1(loop 방지 위해)

	while (s <= e) {
		int mid = (s + e) / 2;

		if (check(vec, mid)) {
			s = mid + 1;
			ans = mid;
		}
		else e = mid - 1;
	}

	cout << ans;

	return 0;
}
